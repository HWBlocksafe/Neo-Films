/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockERC721Facet,
  MockERC721FacetInterface,
} from "../../../facets/MockERC721Facet.sol/MockERC721Facet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "construct",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e4c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a082311461012957806394b91deb14610159578063a9059cbb14610177578063dd62ed3e146101a757610088565b8063095ea7b31461008d57806318160ddd146100bd57806323b872dd146100db578063313ce5671461010b575b600080fd5b6100a760048036038101906100a29190610910565b6101d7565b6040516100b4919061096b565b60405180910390f35b6100c56101ec565b6040516100d29190610995565b60405180910390f35b6100f560048036038101906100f091906109b0565b610204565b604051610102919061096b565b60405180910390f35b61011361020d565b6040516101209190610a1f565b60405180910390f35b610143600480360381019061013e9190610a3a565b610232565b6040516101509190610995565b60405180910390f35b610161610289565b60405161016e919061096b565b60405180910390f35b610191600480360381019061018c9190610910565b6103d6565b60405161019e919061096b565b60405180910390f35b6101c160048036038101906101bc9190610a67565b6103ed565b6040516101ce9190610995565b60405180910390f35b60006101e4338484610482565b905092915050565b6000806101f7610567565b9050806003015491505090565b60009392505050565b600080610218610567565b90508060020160009054906101000a900460ff1691505090565b60008061023d610567565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b600080610294610567565b90506040518060400160405280600781526020017f4d6f636b47656d000000000000000000000000000000000000000000000000008152508160040190805190602001906102e39291906107d4565b506040518060400160405280600381526020017f47454d00000000000000000000000000000000000000000000000000000000008152508160050190805190602001906103319291906107d4565b5060128160020160006101000a81548160ff021916908360ff1602179055508060020160009054906101000a900460ff16600a61036e9190610c09565b620f424061037c9190610c54565b816003018190555080600301548160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600191505090565b60006103e28383610594565b506001905092915050565b6000806103f8610567565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b600061048d8261077a565b6104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c390610d0b565b60405180910390fd5b60006104d6610567565b9050828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019150509392505050565b6000807f0b6e95846c6cceefc9a81e8de919516cc5797056f4e5e1e770e76e1c0b297e6490508091505090565b600061059f8261077a565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590610d0b565b60405180910390fd5b60006105e8610567565b9050828160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106379190610d2b565b8160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550828160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106c99190610d5f565b8160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161076b9190610995565b60405180910390a35092915050565b600080610785610567565b9050828160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015915050919050565b8280546107e090610de4565b90600052602060002090601f0160209004810192826108025760008555610849565b82601f1061081b57805160ff1916838001178555610849565b82800160010185558215610849579182015b8281111561084857825182559160200191906001019061082d565b5b509050610856919061085a565b5090565b5b8082111561087357600081600090555060010161085b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a78261087c565b9050919050565b6108b78161089c565b81146108c257600080fd5b50565b6000813590506108d4816108ae565b92915050565b6000819050919050565b6108ed816108da565b81146108f857600080fd5b50565b60008135905061090a816108e4565b92915050565b6000806040838503121561092757610926610877565b5b6000610935858286016108c5565b9250506020610946858286016108fb565b9150509250929050565b60008115159050919050565b61096581610950565b82525050565b6000602082019050610980600083018461095c565b92915050565b61098f816108da565b82525050565b60006020820190506109aa6000830184610986565b92915050565b6000806000606084860312156109c9576109c8610877565b5b60006109d7868287016108c5565b93505060206109e8868287016108c5565b92505060406109f9868287016108fb565b9150509250925092565b600060ff82169050919050565b610a1981610a03565b82525050565b6000602082019050610a346000830184610a10565b92915050565b600060208284031215610a5057610a4f610877565b5b6000610a5e848285016108c5565b91505092915050565b60008060408385031215610a7e57610a7d610877565b5b6000610a8c858286016108c5565b9250506020610a9d858286016108c5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610b2d57808604811115610b0957610b08610aa7565b5b6001851615610b185780820291505b8081029050610b2685610ad6565b9450610aed565b94509492505050565b600082610b465760019050610c02565b81610b545760009050610c02565b8160018114610b6a5760028114610b7457610ba3565b6001915050610c02565b60ff841115610b8657610b85610aa7565b5b8360020a915084821115610b9d57610b9c610aa7565b5b50610c02565b5060208310610133831016604e8410600b8410161715610bd85782820a905083811115610bd357610bd2610aa7565b5b610c02565b610be58484846001610ae3565b92509050818404811115610bfc57610bfb610aa7565b5b81810290505b9392505050565b6000610c14826108da565b9150610c1f83610a03565b9250610c4c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b36565b905092915050565b6000610c5f826108da565b9150610c6a836108da565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ca357610ca2610aa7565b5b828202905092915050565b600082825260208201905092915050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b6000610cf5601283610cae565b9150610d0082610cbf565b602082019050919050565b60006020820190508181036000830152610d2481610ce8565b9050919050565b6000610d36826108da565b9150610d41836108da565b925082821015610d5457610d53610aa7565b5b828203905092915050565b6000610d6a826108da565b9150610d75836108da565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610daa57610da9610aa7565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dfc57607f821691505b60208210811415610e1057610e0f610db5565b5b5091905056fea2646970667358221220e795efc2b1a3ef4304d185dbf27bc193d48a18c2f9fe6fe6bb57d309ac893d9f64736f6c63430008090033";

type MockERC721FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721Facet__factory extends ContractFactory {
  constructor(...args: MockERC721FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC721Facet> {
    return super.deploy(overrides || {}) as Promise<MockERC721Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC721Facet {
    return super.attach(address) as MockERC721Facet;
  }
  override connect(signer: Signer): MockERC721Facet__factory {
    return super.connect(signer) as MockERC721Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721FacetInterface {
    return new utils.Interface(_abi) as MockERC721FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721Facet {
    return new Contract(address, _abi, signerOrProvider) as MockERC721Facet;
  }
}
