/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Upgrade1Facet,
  Upgrade1FacetInterface,
} from "../../../facets/Upgrade1.sol/Upgrade1Facet";

const _abi = [
  {
    inputs: [],
    name: "getAdminMintedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPublicMintedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061012a806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a5850a14146037578063fac467d5146051575b600080fd5b603d606b565b6040516048919060db565b60405180910390f35b60576081565b6040516062919060db565b60405180910390f35b60008060746097565b905080600f015491505090565b600080608a6097565b9050806011015491505090565b6000807f0b6e95846c6cceefc9a81e8de919516cc5797056f4e5e1e770e76e1c0b297e6490508091505090565b6000819050919050565b60d58160c4565b82525050565b600060208201905060ee600083018460ce565b9291505056fea2646970667358221220d16faf02a7bb8306f15466c9e64a3c82567107d9c37be1de3c7ab4a35fcfe34d64736f6c63430008130033";

type Upgrade1FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Upgrade1FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Upgrade1Facet__factory extends ContractFactory {
  constructor(...args: Upgrade1FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Upgrade1Facet> {
    return super.deploy(overrides || {}) as Promise<Upgrade1Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Upgrade1Facet {
    return super.attach(address) as Upgrade1Facet;
  }
  override connect(signer: Signer): Upgrade1Facet__factory {
    return super.connect(signer) as Upgrade1Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Upgrade1FacetInterface {
    return new utils.Interface(_abi) as Upgrade1FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Upgrade1Facet {
    return new Contract(address, _abi, signerOrProvider) as Upgrade1Facet;
  }
}
